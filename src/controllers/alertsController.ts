import { Request, Response } from "express";
import AlertModel, { Alert } from "../models/alerts";

// Get all alerts
export const getAlerts = async (req: Request, res: Response): Promise<void> => {
    try {
        const alerts = await AlertModel.getAlerts();
        res.status(200).json({ data: alerts, message: "Alerts retrieved successfully" });
    } catch (error) {
        console.error("Error retrieving alerts:", error);
        res.status(500).json({ message: "Error retrieving alerts" });
    }
};

// Get a specific alert by ID
export const getAlertById = async (req: Request, res: Response): Promise<void> => {
    console.log("jfkfd")
    const { id } = req.params;

    try {
        const alert = await AlertModel.getAlertById(parseInt(id, 10));
        if (alert) {
            res.status(200).json({ data: alert, message: "Alert retrieved successfully" });
        } else {
            res.status(404).json({ message: "Alert not found" });
        }
    } catch (error) {
        console.error("Error retrieving alert by ID:", error);
        res.status(500).json({ message: "Error retrieving alert" });
    }
};

// Add a new alert
export const addAlert = async (req: Request, res: Response): Promise<void> => {
    console.log(req.body)
    const { device_id, alert_type, date, timestamp, details } = req.body[0];

    try {
        const newAlert: Alert = {
            alert_id: 0, // This will be auto-generated by the database
            device_id,
            alert_type,
            date: new Date(date),
            timestamp,
            details,
        };

        await AlertModel.addAlert(newAlert);
        res.status(201).json({ message: "Alert added successfully" });
    } catch (error) {
        console.error("Error adding alert:", error);
        res.status(500).json({ message: "Error adding alert" });
    }
};

// Get alerts by partial input (search functionality)
export const getAlertsByPartialInput = async (req: Request, res: Response): Promise<void> => {
    const { device_id, alert_type, details } = req.query;

    try {
        const filters: Partial<Alert> = {
            ...(device_id && { device_id: String(device_id) }),
            ...(alert_type && { alert_type: alert_type as string }),
            ...(details && { details: details as string }),
        };

        const alerts = await AlertModel.getAlertsByPartialInput(filters);
        res.status(200).json({ data: alerts, message: "Filtered alerts retrieved successfully" });
    } catch (error) {
        console.error("Error filtering alerts:", error);
        res.status(500).json({ message: "Error filtering alerts" });
    }
};

// Update an alert by ID
export const updateAlertById = async (req: Request, res: Response): Promise<void> => {
    const { id } = req.params;
    const { device_id, alert_type, date, timestamp, details } = req.body;

    try {
        const updatedFields: Partial<Alert> = {
            ...(device_id && { device_id }),
            ...(alert_type && { alert_type }),
            ...(date && { date: new Date(date) }),
            ...(timestamp && { timestamp }),
            ...(details && { details }),
        };

        await AlertModel.updateAlert(parseInt(id, 10), updatedFields);
        res.status(200).json({ message: "Alert updated successfully" });
    } catch (error) {
        console.error("Error updating alert:", error);
        res.status(500).json({ message: "Error updating alert" });
    }
};

// Get the most recent 6 alerts by date and time
export const getRecentAlerts = async (req: Request, res: Response): Promise<void> => {
    try {
        console.log("abc")
        const recentAlerts = await AlertModel.getRecentAlerts(6); // Fetch 6 most recent alerts
        res.status(200).json({ data: recentAlerts, message: "Recent alerts retrieved successfully" });
    } catch (error) {
        console.error("Error retrieving recent alerts:", error);
        res.status(500).json({ message: "Error retrieving recent alerts" });
    }
};
